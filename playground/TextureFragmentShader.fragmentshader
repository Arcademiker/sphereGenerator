#version 330 core

// Interpolated values from the vertex shaders
in VS_OUT
{
    vec2 UV;
    vec3 eyeDir;
    vec3 lightDir;
} fs_in;

//in vec2 UV; //vec3

// Ouput data
out vec4 color;

// Values that stay constant for the whole mesh.
uniform sampler2D myTexture;
uniform sampler2D myHeightmap;
uniform sampler2D myNormal;

void main(){
    vec3 V = normalize(fs_in.eyeDir);
    vec3 L = normalize(fs_in.lightDir);

    vec3 N = normalize(texture(myNormal, fs_in.UV).rgb * 2.0 - vec3(1.0,1.0,1.0));
    vec3 R = reflect(-L,N);

    vec3 diffuse_albedo = texture(myTexture, fs_in.UV).rgb;
    vec3 diffuse = max(dot(N,L), 0.0) * diffuse_albedo;
    //Uncomment this to turn off diffuse shading
    //diffuse = vec3(0.0);

    vec3 specular_albedo = vec3(1.0);
    vec3 specular = max(pow(dot(R, V), 5.0), 0.0) * specular_albedo;
    //specular = vec3(0.0);

    color = vec4(diffuse + specular, 1.0);
    //color = vec4(texture(myNormal, fs_in.UV).rgb,1.0);
}